set surround

let mapleader = " "
nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :q!<CR>
inoremap <silent> jj <ESC>
nnoremap j gj
nnoremap k gk
nnoremap s <Nop>
nnoremap ss :split<CR>
nnoremap sv :vsplit<CR>
nnoremap sj <C-w>j
nnoremap sk <C-w>k
nnoremap sl <C-w>l
nnoremap sh <C-w>h
nnoremap sJ <C-w>J
nnoremap sK <C-w>K
nnoremap sL <C-w>L
nnoremap sH <C-w>H
nnoremap <C-k> gt
nnoremap <C-j> gT
nnoremap / :action Find<CR>
nnoremap <C-o> :action Back<CR>
nnoremap <C-i> :action Forward<CR>

" search
nnoremap <Leader>d :action GotoDeclaration<CR>
nnoremap <Leader>i :action GotoImplementation<CR>
nnoremap <Leader>c :action FindUsages<CR>

" rename
nnoremap <Leader>r :action RenameElement<CR>

" format
nnoremap <Leader>f :action ReformatCode<CR>
vnoremap <Leader>f :action ReformatCode<CR>

" comment out
nnoremap gcc :action CommentByLineComment<CR>
vnoremap gc :action CommentByLineComment<CR>

" search
nnoremap <C-]> :action GotoFile<CR>
nnoremap <C-g> :action FindInPath<CR>


" show commands
nnoremap <Leader><Leader> :action GotoAction<CR>

inoremap <C-k> <Enter>
