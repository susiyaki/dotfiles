# インストール手順
# 1. brew等で入れる
# 2. `git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm` でplugin管理ツールインストール
# 3. Prefix -> I でpluginをインストール
# 4. teminal起動時に
#      tmux new-session -A -s main
#    を実行


# auto start terminal
set -g @continuum-boot "on"

# auto restore tmux
set -g @continuum-restore "on"

set-option -g default-shell /opt/homebrew/bin/fish
set-option -g default-command "fish"

#== nvim setting ===================
set-option -sg escape-time 10
set-option -g focus-events on

#== Color ==========================
# tmuxを256色表示できるようにする
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ',xterm-256color:Tc'

# pane color
# set -g window-style "bg=colour236"
# set -g window-active-style "bg=colour232"

# pane border color
# set -g pane-border-style "bg=colour240 fg=colour33"
# set -g pane-active-border-style "bg=colour232 fg=colour14"

#== General ========================
# prefixキーをC-qに変更
set -g prefix C-q

# C-bのキーバインドを解除
unbind C-b

# 番号基準値を変更
set-option -g base-index 1

# ペイン間移動
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# ペインリサイズ
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# window間移動
bind C-u select-window -t -1
bind C-i select-window -t +1

# ペインを縦分割する
bind | split-window -h -c "#{pane_current_path}"

# ペインを横分割する
bind - split-window -v -c "#{pane_current_path}"

# ウィンドウ作成時にカレントディレクトリを引き継ぐ
bind-key -T prefix c new-window -c "#{pane_current_path}"

# カレントpaneをリフレッシュ
bind R respawn-pane -k

# session選択時にmeta keyを不要に
bind -n a if -F '#{==:tree-mode,#{pane_mode}}' 'send M-a' 'send a'
bind -n b if -F '#{==:tree-mode,#{pane_mode}}' 'send M-b' 'send b'
bind -n c if -F '#{==:tree-mode,#{pane_mode}}' 'send M-c' 'send c'
bind -n d if -F '#{==:tree-mode,#{pane_mode}}' 'send M-d' 'send d'
bind -n e if -F '#{==:tree-mode,#{pane_mode}}' 'send M-e' 'send e'
bind -n f if -F '#{==:tree-mode,#{pane_mode}}' 'send M-f' 'send f'
bind -n g if -F '#{==:tree-mode,#{pane_mode}}' 'send M-g' 'send g'
bind -n h if -F '#{==:tree-mode,#{pane_mode}}' 'send M-h' 'send h'
bind -n i if -F '#{==:tree-mode,#{pane_mode}}' 'send M-i' 'send i'
bind -n j if -F '#{==:tree-mode,#{pane_mode}}' 'send M-j' 'send j'
bind -n k if -F '#{==:tree-mode,#{pane_mode}}' 'send M-k' 'send k'
bind -n l if -F '#{==:tree-mode,#{pane_mode}}' 'send M-l' 'send l'
bind -n m if -F '#{==:tree-mode,#{pane_mode}}' 'send M-m' 'send m'
bind -n n if -F '#{==:tree-mode,#{pane_mode}}' 'send M-n' 'send n'
bind -n o if -F '#{==:tree-mode,#{pane_mode}}' 'send M-o' 'send o'
bind -n p if -F '#{==:tree-mode,#{pane_mode}}' 'send M-p' 'send p'
bind -n q if -F '#{==:tree-mode,#{pane_mode}}' 'send M-q' 'send q'
bind -n r if -F '#{==:tree-mode,#{pane_mode}}' 'send M-r' 'send r'
bind -n s if -F '#{==:tree-mode,#{pane_mode}}' 'send M-s' 'send s'
bind -n t if -F '#{==:tree-mode,#{pane_mode}}' 'send M-t' 'send t'
bind -n u if -F '#{==:tree-mode,#{pane_mode}}' 'send M-u' 'send u'
bind -n v if -F '#{==:tree-mode,#{pane_mode}}' 'send M-v' 'send v'
bind -n w if -F '#{==:tree-mode,#{pane_mode}}' 'send M-w' 'send w'
bind -n x if -F '#{==:tree-mode,#{pane_mode}}' 'send M-x' 'send x'
bind -n y if -F '#{==:tree-mode,#{pane_mode}}' 'send M-y' 'send y'
bind -n z if -F '#{==:tree-mode,#{pane_mode}}' 'send M-z' 'send z'

#== Status bar ====================
# ステータスバーをトップに配置する
set-option -g status-position top

# 左右のステータスバーの長さを決定する
# set-option -g status-left-length 100
# set-option -g status-right-length 100

# ステータスバーの色を設定する
set-option -g status-bg colour235

# status line の文字色を指定する。
set-option -g status-fg colour255

# status format
set-window-option -g window-status-format " #I: #W "
set-option -g status-left "[session] #S "
set-option -g status-right "#(wifi) | #(battery --tmux)  [ %H:%M - %d.%m.%y ]"

# status bar config of active window
set-window-option -g window-status-current-style "fg=colour235 bg=colour7"

# ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1

# センタライズ（主にウィンドウ番号など）
set-option -g status-justify centre

#== Copy Mode =====================
# コピーモード・ペーストのデフォルトマッピング解除
unbind [
unbind ]
# コピーモード開始のキー
bind j copy-mode

# コピーモードでvimキーバインドを使う
setw -g mode-keys vi

# "v" で選択を始める
bind -T copy-mode-vi v send -X begin-selection

# "V" で行選択
bind -T copy-mode-vi V send -X select-line

# "C-v" で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle

# "y" でヤンク
if-shell "uname | grep -q Darwin" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'"
if-shell "uname | grep -q Linux" "bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xsel -ip && xsel -op | xsel -ib'"

# "Y" で行ヤンク
bind -T copy-mode-vi Y send -X copy-line

# "p"でペースト
if-shell "uname | grep -q Darwin" "bind-key p paste-buffer"
if-shell "uname | grep -q Linux" "bind-key p paste-buffer"

#== Sychronize Mode ================
# 同時編集
bind C-] set-window-option synchronize-panes on
bind C-[ set-window-option synchronize-panes off

#== Command Bind ===================
bind d run-shell 'tmux popup -E -w 95% -h 95% "lazydocker"'
# bind g run-shell 'tmux popup -EE "lazygit -p #{pane_current_path}"'
bind g run-shell 'tmux popup -EE -w 95% -h 95% "cd #{pane_current_path} | git rev-parse --show-toplevel | lazygit"'

#== Plugins ========================

set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-resurrect"
set -g @resurrect-strategy-nvim 'session'
set -g @plugin "tmux-plugins/tmux-continuum"

#== Theme ==========================
set -g @plugin 'wfxr/tmux-power'
set -g @plugin 'wfxr/tmux-net-speed'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

set -g @tmux_power_theme '#93a3a2'
set -g @tmux_power_show_upload_speed true
set -g @tmux_power_show_download_speed true
set -g @tmux_power_prefix_highlight_pos 'R'

# Initialize TMUX plugin manager
run "~/.tmux/plugins/tpm/tpm"
